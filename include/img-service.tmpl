# Stolen from https://medium.com/merapar/nginx-reverse-proxy-image-resizing-aws-cece1db5da01
# NGINX will create a cache capable of storing 100MB of keys and 1000MB of data.
proxy_cache_path /tmp/nginx_cache levels=1:2
keys_zone=nginx_cache:100M max_size=1G inactive=40d;

# resizing server
server {
    listen 8080;
    server_name _;

    location / {
        return 502;
    }

    location /nginx_status {
        access_log off;
        stub_status on;
    }

    location /internal/health {
        access_log off;
        return 200;
    }

    location ~ "^(/listings/.+\.jpg)[?][w]=([1-9][0-9]{1,3})[&]h=([1-9][0-9]{1,3})" {
        error_page 415 =404 /empty.gif;
        image_filter_buffer 2M;
        image_filter_jpeg_quality 85; # Desired JPG quality
        image_filter resize $1 $2;
        proxy_pass http://127.0.0.1:10178/$uri;
    }
}

# back-end virtual host for retrieving file from AWS
server {
    listen 10178;
    server_name _;
    resolver_timeout 2s;
    set $backend '{{ .Env.BUCKET_NAME }}.s3-{{ .Env.BUCKET_REGION }}.amazonaws.com';
    proxy_buffering off;
    proxy_http_version 1.1;
    proxy_pass_request_body off;  # Not needed by AWS.
    proxy_pass_request_headers off;
    # Clean up the headers going to and from S3.
    proxy_hide_header "x-amz-id-2";
    proxy_hide_header "x-amz-request-id";
    proxy_hide_header "x-amz-storage-class";
    proxy_hide_header "Set-Cookie";
    proxy_ignore_headers "Set-Cookie";
    proxy_connect_timeout   30;
    proxy_send_timeout      30;
    proxy_read_timeout      30;
    location ~ ^/listings/(.+) {
        set $args ""; # Drop query params toward s3
        proxy_pass http://$backend/$uri;
        error_page 415 =404 /empty.gif;
        proxy_cache nginx_cache;
        proxy_cache_key "temp_$proxy_host$uri$is_args$args";
        proxy_cache_valid 30d;
        expires 100d;
    }
}
